/*
 * generated by Xtext 2.12.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getElementsExperimentOntologyParserRuleCall_0());
			}
			lv_elements_0_0=ruleExperimentOntology
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"org.xtext.example.mydsl.MyDsl.ExperimentOntology");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleExperimentOntology
entryRuleExperimentOntology returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExperimentOntologyRule()); }
	iv_ruleExperimentOntology=ruleExperimentOntology
	{ $current=$iv_ruleExperimentOntology.current; }
	EOF;

// Rule ExperimentOntology
ruleExperimentOntology returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExperimentOntologyAccess().getModelSectionParserRuleCall_0());
		}
		this_ModelSection_0=ruleModelSection
		{
			$current = $this_ModelSection_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExperimentOntologyAccess().getGoalsParserRuleCall_1());
		}
		this_Goals_1=ruleGoals
		{
			$current = $this_Goals_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExperimentOntologyAccess().getHypothesisParserRuleCall_2());
		}
		this_Hypothesis_2=ruleHypothesis
		{
			$current = $this_Hypothesis_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExperimentOntologyAccess().getExperimentParserRuleCall_3());
		}
		this_Experiment_3=ruleExperiment
		{
			$current = $this_Experiment_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleModelSection
entryRuleModelSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelSectionRule()); }
	iv_ruleModelSection=ruleModelSection
	{ $current=$iv_ruleModelSection.current; }
	EOF;

// Rule ModelSection
ruleModelSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='model'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelSectionAccess().getModelKeyword_0());
		}
		(
			(
				lv_modName_1_0=RULE_ID
				{
					newLeafNode(lv_modName_1_0, grammarAccess.getModelSectionAccess().getModNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelSectionRule());
					}
					setWithLastConsumed(
						$current,
						"modName",
						lv_modName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelSectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelSectionAccess().getMechanismsMechanismParserRuleCall_3_0());
				}
				lv_mechanisms_3_0=ruleMechanism
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelSectionRule());
					}
					add(
						$current,
						"mechanisms",
						lv_mechanisms_3_0,
						"org.xtext.example.mydsl.MyDsl.Mechanism");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelSectionAccess().getEventsEventDescriptorParserRuleCall_4_0());
				}
				lv_events_4_0=ruleEventDescriptor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelSectionRule());
					}
					add(
						$current,
						"events",
						lv_events_4_0,
						"org.xtext.example.mydsl.MyDsl.EventDescriptor");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelSectionAccess().getParametersFactorParserRuleCall_5_0());
				}
				lv_parameters_5_0=ruleFactor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelSectionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_5_0,
						"org.xtext.example.mydsl.MyDsl.Factor");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getModelSectionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleMechanism
entryRuleMechanism returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMechanismRule()); }
	iv_ruleMechanism=ruleMechanism
	{ $current=$iv_ruleMechanism.current; }
	EOF;

// Rule Mechanism
ruleMechanism returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='mechanism'
		{
			newLeafNode(otherlv_0, grammarAccess.getMechanismAccess().getMechanismKeyword_0());
		}
		(
			(
				lv_mechanismName_1_0=RULE_ID
				{
					newLeafNode(lv_mechanismName_1_0, grammarAccess.getMechanismAccess().getMechanismNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMechanismRule());
					}
					setWithLastConsumed(
						$current,
						"mechanismName",
						lv_mechanismName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=' = '
		{
			newLeafNode(otherlv_2, grammarAccess.getMechanismAccess().getSpaceEqualsSignSpaceKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMechanismAccess().getLHSReactionParserRuleCall_3_0());
				}
				lv_LHS_3_0=ruleReaction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMechanismRule());
					}
					set(
						$current,
						"LHS",
						lv_LHS_3_0,
						"org.xtext.example.mydsl.MyDsl.Reaction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMechanismAccess().getConditionGuardConditionParserRuleCall_4_0());
				}
				lv_condition_4_0=ruleGuardCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMechanismRule());
					}
					set(
						$current,
						"condition",
						lv_condition_4_0,
						"org.xtext.example.mydsl.MyDsl.GuardCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=' -> '
		{
			newLeafNode(otherlv_5, grammarAccess.getMechanismAccess().getSpaceHyphenMinusGreaterThanSignSpaceKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMechanismAccess().getRHSReactionParserRuleCall_6_0());
				}
				lv_RHS_6_0=ruleReaction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMechanismRule());
					}
					set(
						$current,
						"RHS",
						lv_RHS_6_0,
						"org.xtext.example.mydsl.MyDsl.Reaction");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReaction
entryRuleReaction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactionRule()); }
	iv_ruleReaction=ruleReaction
	{ $current=$iv_ruleReaction.current; }
	EOF;

// Rule Reaction
ruleReaction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_agent1_0_0=RULE_ID
				{
					newLeafNode(lv_agent1_0_0, grammarAccess.getReactionAccess().getAgent1IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactionRule());
					}
					setWithLastConsumed(
						$current,
						"agent1",
						lv_agent1_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1=' + '
			{
				newLeafNode(otherlv_1, grammarAccess.getReactionAccess().getSpacePlusSignSpaceKeyword_1());
			}
		)?
		(
			(
				lv_agent_2_0=RULE_ID
				{
					newLeafNode(lv_agent_2_0, grammarAccess.getReactionAccess().getAgentIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactionRule());
					}
					setWithLastConsumed(
						$current,
						"agent",
						lv_agent_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
	)
;

// Entry rule entryRuleGuardCondition
entryRuleGuardCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGuardConditionRule()); }
	iv_ruleGuardCondition=ruleGuardCondition
	{ $current=$iv_ruleGuardCondition.current; }
	EOF;

// Rule GuardCondition
ruleGuardCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_gd_0_0='['
				{
					newLeafNode(lv_gd_0_0, grammarAccess.getGuardConditionAccess().getGdLeftSquareBracketKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGuardConditionRule());
					}
					setWithLastConsumed($current, "gd", lv_gd_0_0, "[");
				}
			)
		)
		(
			(
				lv_condition1_1_0=RULE_ID
				{
					newLeafNode(lv_condition1_1_0, grammarAccess.getGuardConditionAccess().getCondition1IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGuardConditionRule());
					}
					setWithLastConsumed(
						$current,
						"condition1",
						lv_condition1_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getGuardConditionAccess().getLinkLinkOperatorsParserRuleCall_2_0());
				}
				lv_link_2_0=ruleLinkOperators
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGuardConditionRule());
					}
					set(
						$current,
						"link",
						lv_link_2_0,
						"org.xtext.example.mydsl.MyDsl.LinkOperators");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_condition2_3_0=RULE_ID
				{
					newLeafNode(lv_condition2_3_0, grammarAccess.getGuardConditionAccess().getCondition2IDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGuardConditionRule());
					}
					setWithLastConsumed(
						$current,
						"condition2",
						lv_condition2_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getGuardConditionAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleLinkOperators
entryRuleLinkOperators returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLinkOperatorsRule()); }
	iv_ruleLinkOperators=ruleLinkOperators
	{ $current=$iv_ruleLinkOperators.current.getText(); }
	EOF;

// Rule LinkOperators
ruleLinkOperators returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getAsteriskKeyword_2());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getSolidusKeyword_3());
		}
		    |
		kw='%'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getPercentSignKeyword_4());
		}
		    |
		kw=' = '
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getSpaceEqualsSignSpaceKeyword_5());
		}
		    |
		kw=' == '
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getSpaceEqualsSignEqualsSignSpaceKeyword_6());
		}
		    |
		kw='&&'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getAmpersandAmpersandKeyword_7());
		}
		    |
		kw='||'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getVerticalLineVerticalLineKeyword_8());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getLessThanSignKeyword_9());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getLessThanSignEqualsSignKeyword_10());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getGreaterThanSignKeyword_11());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getGreaterThanSignEqualsSignKeyword_12());
		}
		    |
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getExclamationMarkKeyword_13());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLinkOperatorsAccess().getExclamationMarkEqualsSignKeyword_14());
		}
	)
;

// Entry rule entryRuleEventDescriptor
entryRuleEventDescriptor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventDescriptorRule()); }
	iv_ruleEventDescriptor=ruleEventDescriptor
	{ $current=$iv_ruleEventDescriptor.current; }
	EOF;

// Rule EventDescriptor
ruleEventDescriptor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='event'
		{
			newLeafNode(otherlv_0, grammarAccess.getEventDescriptorAccess().getEventKeyword_0());
		}
		(
			(
				lv_eventName_1_0=RULE_ID
				{
					newLeafNode(lv_eventName_1_0, grammarAccess.getEventDescriptorAccess().getEventNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventDescriptorRule());
					}
					setWithLastConsumed(
						$current,
						"eventName",
						lv_eventName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=' = '
		{
			newLeafNode(otherlv_2, grammarAccess.getEventDescriptorAccess().getSpaceEqualsSignSpaceKeyword_2());
		}
		(
			(
				lv_event_3_0=RULE_STRING
				{
					newLeafNode(lv_event_3_0, grammarAccess.getEventDescriptorAccess().getEventSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventDescriptorRule());
					}
					setWithLastConsumed(
						$current,
						"event",
						lv_event_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='parameter'
		{
			newLeafNode(otherlv_0, grammarAccess.getFactorAccess().getParameterKeyword_0());
		}
		(
			(
				lv_factorName_1_0=RULE_ID
				{
					newLeafNode(lv_factorName_1_0, grammarAccess.getFactorAccess().getFactorNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFactorRule());
					}
					setWithLastConsumed(
						$current,
						"factorName",
						lv_factorName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=' = '
		{
			newLeafNode(otherlv_2, grammarAccess.getFactorAccess().getSpaceEqualsSignSpaceKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFactorAccess().getFactorTypeVariableTypeEnumRuleCall_3_0());
				}
				lv_factorType_3_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFactorRule());
					}
					set(
						$current,
						"factorType",
						lv_factorType_3_0,
						"org.xtext.example.mydsl.MyDsl.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_factorType1_4_0=RULE_ID
				{
					newLeafNode(lv_factorType1_4_0, grammarAccess.getFactorAccess().getFactorType1IDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFactorRule());
					}
					setWithLastConsumed(
						$current,
						"factorType1",
						lv_factorType1_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_5='with'
		{
			newLeafNode(otherlv_5, grammarAccess.getFactorAccess().getWithKeyword_5());
		}
		(
			otherlv_6='values'
			{
				newLeafNode(otherlv_6, grammarAccess.getFactorAccess().getValuesKeyword_6_0());
			}
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getFactorAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorAccess().getFactorValueValuesParserRuleCall_6_2_0());
					}
					lv_factorValue_8_0=ruleValues
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorRule());
						}
						set(
							$current,
							"factorValue",
							lv_factorValue_8_0,
							"org.xtext.example.mydsl.MyDsl.Values");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getFactorAccess().getRightCurlyBracketKeyword_6_3());
			}
		)?
		(
			otherlv_10='properties'
			{
				newLeafNode(otherlv_10, grammarAccess.getFactorAccess().getPropertiesKeyword_7_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getFactorAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorAccess().getFactorPropertiesPropertiesParserRuleCall_7_2_0());
					}
					lv_factorProperties_12_0=ruleproperties
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorRule());
						}
						add(
							$current,
							"factorProperties",
							lv_factorProperties_12_0,
							"org.xtext.example.mydsl.MyDsl.properties");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_13='}'
			{
				newLeafNode(otherlv_13, grammarAccess.getFactorAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRuleproperties
entryRuleproperties returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertiesRule()); }
	iv_ruleproperties=ruleproperties
	{ $current=$iv_ruleproperties.current; }
	EOF;

// Rule properties
ruleproperties returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_pName_0_0=RULE_ID
				{
					newLeafNode(lv_pName_0_0, grammarAccess.getPropertiesAccess().getPNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertiesRule());
					}
					setWithLastConsumed(
						$current,
						"pName",
						lv_pName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPropertiesAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertiesAccess().getPValValuesParserRuleCall_2_0());
				}
				lv_pVal_2_0=ruleValues
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertiesRule());
					}
					set(
						$current,
						"pVal",
						lv_pVal_2_0,
						"org.xtext.example.mydsl.MyDsl.Values");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getPropertiesAccess().getCommaKeyword_3());
			}
		)?
	)
;

// Entry rule entryRuleValues
entryRuleValues returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValuesRule()); }
	iv_ruleValues=ruleValues
	{ $current=$iv_ruleValues.current; }
	EOF;

// Rule Values
ruleValues returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_fVal_0_0=RULE_ID
				{
					newLeafNode(lv_fVal_0_0, grammarAccess.getValuesAccess().getFValIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValuesRule());
					}
					setWithLastConsumed(
						$current,
						"fVal",
						lv_fVal_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			(
				lv_function_1_0=RULE_STRING
				{
					newLeafNode(lv_function_1_0, grammarAccess.getValuesAccess().getFunctionSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValuesRule());
					}
					setWithLastConsumed(
						$current,
						"function",
						lv_function_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			(
				lv_value_2_0=RULE_RANGEVALUE
				{
					newLeafNode(lv_value_2_0, grammarAccess.getValuesAccess().getValueRangeValueTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValuesRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl.MyDsl.rangeValue");
				}
			)
		)?
		(
			(
				lv_fvalue_3_0=RULE_FACTORLEVELVALUE
				{
					newLeafNode(lv_fvalue_3_0, grammarAccess.getValuesAccess().getFvalueFactorLevelValueTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValuesRule());
					}
					setWithLastConsumed(
						$current,
						"fvalue",
						lv_fvalue_3_0,
						"org.xtext.example.mydsl.MyDsl.factorLevelValue");
				}
			)
		)?
	)
;

// Entry rule entryRuleGoals
entryRuleGoals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoalsRule()); }
	iv_ruleGoals=ruleGoals
	{ $current=$iv_ruleGoals.current; }
	EOF;

// Rule Goals
ruleGoals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='goal'
		{
			newLeafNode(otherlv_0, grammarAccess.getGoalsAccess().getGoalKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGoalsAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='object'
		{
			newLeafNode(otherlv_2, grammarAccess.getGoalsAccess().getObjectKeyword_2());
		}
		otherlv_3='of'
		{
			newLeafNode(otherlv_3, grammarAccess.getGoalsAccess().getOfKeyword_3());
		}
		otherlv_4='study'
		{
			newLeafNode(otherlv_4, grammarAccess.getGoalsAccess().getStudyKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getGoalsAccess().getColonKeyword_5());
		}
		(
			(
				lv_objOfStudy_6_0=RULE_STRING
				{
					newLeafNode(lv_objOfStudy_6_0, grammarAccess.getGoalsAccess().getObjOfStudySTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoalsRule());
					}
					setWithLastConsumed(
						$current,
						"objOfStudy",
						lv_objOfStudy_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='purpose'
		{
			newLeafNode(otherlv_7, grammarAccess.getGoalsAccess().getPurposeKeyword_7());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getGoalsAccess().getColonKeyword_8());
		}
		(
			(
				lv_purpose_9_0=RULE_STRING
				{
					newLeafNode(lv_purpose_9_0, grammarAccess.getGoalsAccess().getPurposeSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoalsRule());
					}
					setWithLastConsumed(
						$current,
						"purpose",
						lv_purpose_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10='focus'
		{
			newLeafNode(otherlv_10, grammarAccess.getGoalsAccess().getFocusKeyword_10());
		}
		otherlv_11=':'
		{
			newLeafNode(otherlv_11, grammarAccess.getGoalsAccess().getColonKeyword_11());
		}
		(
			(
				lv_focus_12_0=RULE_STRING
				{
					newLeafNode(lv_focus_12_0, grammarAccess.getGoalsAccess().getFocusSTRINGTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoalsRule());
					}
					setWithLastConsumed(
						$current,
						"focus",
						lv_focus_12_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_13='view point'
		{
			newLeafNode(otherlv_13, grammarAccess.getGoalsAccess().getViewPointKeyword_13());
		}
		otherlv_14=':'
		{
			newLeafNode(otherlv_14, grammarAccess.getGoalsAccess().getColonKeyword_14());
		}
		(
			(
				lv_viewPoint_15_0=RULE_STRING
				{
					newLeafNode(lv_viewPoint_15_0, grammarAccess.getGoalsAccess().getViewPointSTRINGTerminalRuleCall_15_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoalsRule());
					}
					setWithLastConsumed(
						$current,
						"viewPoint",
						lv_viewPoint_15_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_16='context'
		{
			newLeafNode(otherlv_16, grammarAccess.getGoalsAccess().getContextKeyword_16());
		}
		otherlv_17=':'
		{
			newLeafNode(otherlv_17, grammarAccess.getGoalsAccess().getColonKeyword_17());
		}
		(
			(
				lv_context_18_0=RULE_STRING
				{
					newLeafNode(lv_context_18_0, grammarAccess.getGoalsAccess().getContextSTRINGTerminalRuleCall_18_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoalsRule());
					}
					setWithLastConsumed(
						$current,
						"context",
						lv_context_18_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getGoalsAccess().getRightCurlyBracketKeyword_19());
		}
	)
;

// Entry rule entryRuleHypothesis
entryRuleHypothesis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHypothesisRule()); }
	iv_ruleHypothesis=ruleHypothesis
	{ $current=$iv_ruleHypothesis.current; }
	EOF;

// Rule Hypothesis
ruleHypothesis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='hypotheses'
		{
			newLeafNode(otherlv_0, grammarAccess.getHypothesisAccess().getHypothesesKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='mechanistic'
			{
				newLeafNode(otherlv_2, grammarAccess.getHypothesisAccess().getMechanisticKeyword_2_0());
			}
			otherlv_3='hypotheses'
			{
				newLeafNode(otherlv_3, grammarAccess.getHypothesisAccess().getHypothesesKeyword_2_1());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHypothesisAccess().getMechHypothesisMechHypothesisParserRuleCall_2_3_0());
					}
					lv_mechHypothesis_5_0=ruleMechHypothesis
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHypothesisRule());
						}
						add(
							$current,
							"mechHypothesis",
							lv_mechHypothesis_5_0,
							"org.xtext.example.mydsl.MyDsl.MechHypothesis");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
		(
			otherlv_7='evidence'
			{
				newLeafNode(otherlv_7, grammarAccess.getHypothesisAccess().getEvidenceKeyword_3_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHypothesisAccess().getEvidencesEvidenceParserRuleCall_3_2_0());
					}
					lv_evidences_9_0=ruleEvidence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHypothesisRule());
						}
						add(
							$current,
							"evidences",
							lv_evidences_9_0,
							"org.xtext.example.mydsl.MyDsl.Evidence");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_3_3());
			}
		)?
		(
			otherlv_11='coherence'
			{
				newLeafNode(otherlv_11, grammarAccess.getHypothesisAccess().getCoherenceKeyword_4_0());
			}
			otherlv_12='model'
			{
				newLeafNode(otherlv_12, grammarAccess.getHypothesisAccess().getModelKeyword_4_1());
			}
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHypothesisAccess().getCoherenceLinksCoherenceLinkParserRuleCall_4_3_0());
					}
					lv_coherenceLinks_14_0=ruleCoherenceLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHypothesisRule());
						}
						add(
							$current,
							"coherenceLinks",
							lv_coherenceLinks_14_0,
							"org.xtext.example.mydsl.MyDsl.CoherenceLink");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_16='relational'
			{
				newLeafNode(otherlv_16, grammarAccess.getHypothesisAccess().getRelationalKeyword_5_0());
			}
			otherlv_17='hypotheses'
			{
				newLeafNode(otherlv_17, grammarAccess.getHypothesisAccess().getHypothesesKeyword_5_1());
			}
			otherlv_18='{'
			{
				newLeafNode(otherlv_18, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHypothesisAccess().getRelHypothesisRelationalQueryParserRuleCall_5_3_0());
					}
					lv_relHypothesis_19_0=ruleRelationalQuery
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHypothesisRule());
						}
						add(
							$current,
							"relHypothesis",
							lv_relHypothesis_19_0,
							"org.xtext.example.mydsl.MyDsl.RelationalQuery");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_20='}'
			{
				newLeafNode(otherlv_20, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_21='}'
		{
			newLeafNode(otherlv_21, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCoherenceLink
entryRuleCoherenceLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoherenceLinkRule()); }
	iv_ruleCoherenceLink=ruleCoherenceLink
	{ $current=$iv_ruleCoherenceLink.current; }
	EOF;

// Rule CoherenceLink
ruleCoherenceLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCoherenceLinkAccess().getCoherenceCoherenceEnumRuleCall_0_0());
				}
				lv_coherence_0_0=ruleCoherence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCoherenceLinkRule());
					}
					set(
						$current,
						"coherence",
						lv_coherence_0_0,
						"org.xtext.example.mydsl.MyDsl.Coherence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCoherenceLinkAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_hyp_2_0=RULE_ID
				{
					newLeafNode(lv_hyp_2_0, grammarAccess.getCoherenceLinkAccess().getHypIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCoherenceLinkRule());
					}
					addWithLastConsumed(
						$current,
						"hyp",
						lv_hyp_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)*
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCoherenceLinkAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getCoherenceLinkAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				lv_evi_5_0=RULE_ID
				{
					newLeafNode(lv_evi_5_0, grammarAccess.getCoherenceLinkAccess().getEviIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCoherenceLinkRule());
					}
					addWithLastConsumed(
						$current,
						"evi",
						lv_evi_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getCoherenceLinkAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleMechHypothesis
entryRuleMechHypothesis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMechHypothesisRule()); }
	iv_ruleMechHypothesis=ruleMechHypothesis
	{ $current=$iv_ruleMechHypothesis.current; }
	EOF;

// Rule MechHypothesis
ruleMechHypothesis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_mName_0_0=RULE_ID
				{
					newLeafNode(lv_mName_0_0, grammarAccess.getMechHypothesisAccess().getMNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMechHypothesisRule());
					}
					setWithLastConsumed(
						$current,
						"mName",
						lv_mName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMechHypothesisAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMechHypothesisAccess().getAssoMechTemporalPatternParserRuleCall_2_0());
				}
				lv_assoMech_2_0=ruleTemporalPattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMechHypothesisRule());
					}
					add(
						$current,
						"assoMech",
						lv_assoMech_2_0,
						"org.xtext.example.mydsl.MyDsl.TemporalPattern");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				lv_mechanisticHypothesis_3_0=RULE_ID
				{
					newLeafNode(lv_mechanisticHypothesis_3_0, grammarAccess.getMechHypothesisAccess().getMechanisticHypothesisIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMechHypothesisRule());
					}
					setWithLastConsumed(
						$current,
						"mechanisticHypothesis",
						lv_mechanisticHypothesis_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
	)
;

// Entry rule entryRuleEvidence
entryRuleEvidence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvidenceRule()); }
	iv_ruleEvidence=ruleEvidence
	{ $current=$iv_ruleEvidence.current; }
	EOF;

// Rule Evidence
ruleEvidence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_eName_0_0=RULE_ID
				{
					newLeafNode(lv_eName_0_0, grammarAccess.getEvidenceAccess().getENameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvidenceRule());
					}
					setWithLastConsumed(
						$current,
						"eName",
						lv_eName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getEvidenceAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvidenceAccess().getQueryTemporalPatternParserRuleCall_2_0());
				}
				lv_query_2_0=ruleTemporalPattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvidenceRule());
					}
					add(
						$current,
						"query",
						lv_query_2_0,
						"org.xtext.example.mydsl.MyDsl.TemporalPattern");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='activation'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvidenceAccess().getActivationKeyword_3());
		}
		otherlv_4='weight'
		{
			newLeafNode(otherlv_4, grammarAccess.getEvidenceAccess().getWeightKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getEvidenceAccess().getColonKeyword_5());
		}
		(
			(
				lv_objOfStudy_6_0=RULE_RANGEVALUE
				{
					newLeafNode(lv_objOfStudy_6_0, grammarAccess.getEvidenceAccess().getObjOfStudyRangeValueTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEvidenceRule());
					}
					setWithLastConsumed(
						$current,
						"objOfStudy",
						lv_objOfStudy_6_0,
						"org.xtext.example.mydsl.MyDsl.rangeValue");
				}
			)
		)
	)
;

// Entry rule entryRuleTemporalPattern
entryRuleTemporalPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalPatternRule()); }
	iv_ruleTemporalPattern=ruleTemporalPattern
	{ $current=$iv_ruleTemporalPattern.current; }
	EOF;

// Rule TemporalPattern
ruleTemporalPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTemporalPatternAccess().getConditionParserRuleCall_0());
		}
		this_Condition_0=ruleCondition
		{
			$current = $this_Condition_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTemporalPatternAccess().getL2LinksEnumRuleCall_1_0());
				}
				lv_l2_1_0=ruleLinks
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemporalPatternRule());
					}
					add(
						$current,
						"l2",
						lv_l2_1_0,
						"org.xtext.example.mydsl.MyDsl.Links");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTemporalPatternAccess().getExpExpressionEnumRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemporalPatternRule());
					}
					add(
						$current,
						"exp",
						lv_exp_2_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTemporalPatternAccess().getOp1TemporalEnumRuleCall_3_0_0());
					}
					lv_op1_3_0=ruleTemporal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemporalPatternRule());
						}
						add(
							$current,
							"op1",
							lv_op1_3_0,
							"org.xtext.example.mydsl.MyDsl.Temporal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getTemporalPatternAccess().getOp2LogicalEnumRuleCall_3_1_0());
					}
					lv_op2_4_0=ruleLogical
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemporalPatternRule());
						}
						add(
							$current,
							"op2",
							lv_op2_4_0,
							"org.xtext.example.mydsl.MyDsl.Logical");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTemporalPatternAccess().getL3LinksEnumRuleCall_4_0());
				}
				lv_l3_5_0=ruleLinks
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemporalPatternRule());
					}
					set(
						$current,
						"l3",
						lv_l3_5_0,
						"org.xtext.example.mydsl.MyDsl.Links");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getConditionEventParserRuleCall_0_0());
				}
				lv_condition_0_0=ruleEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_0_0,
						"org.xtext.example.mydsl.MyDsl.Event");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getLoLinkOperatorsParserRuleCall_1_0());
				}
				lv_lo_1_0=ruleLinkOperators
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"lo",
						lv_lo_1_0,
						"org.xtext.example.mydsl.MyDsl.LinkOperators");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getEEventParserRuleCall_2_0());
				}
				lv_e_2_0=ruleEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"e",
						lv_e_2_0,
						"org.xtext.example.mydsl.MyDsl.Event");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getExp1ExpressionEnumRuleCall_3_0());
				}
				lv_exp1_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"exp1",
						lv_exp1_3_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_v_4_0=RULE_RANGEVALUE
				{
					newLeafNode(lv_v_4_0, grammarAccess.getConditionAccess().getVRangeValueTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
					setWithLastConsumed(
						$current,
						"v",
						lv_v_4_0,
						"org.xtext.example.mydsl.MyDsl.rangeValue");
				}
			)
		)?
	)
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEventAccess().getDispersedParserRuleCall_0());
		}
		this_Dispersed_0=ruleDispersed
		{
			$current = $this_Dispersed_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getSimultaneousParserRuleCall_1());
		}
		this_Simultaneous_1=ruleSimultaneous
		{
			$current = $this_Simultaneous_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimultaneous
entryRuleSimultaneous returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimultaneousRule()); }
	iv_ruleSimultaneous=ruleSimultaneous
	{ $current=$iv_ruleSimultaneous.current; }
	EOF;

// Rule Simultaneous
ruleSimultaneous returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getSimultaneousAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimultaneousAccess().getSim1ReParserRuleCall_1_0());
				}
				lv_sim1_1_0=ruleRe
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimultaneousRule());
					}
					set(
						$current,
						"sim1",
						lv_sim1_1_0,
						"org.xtext.example.mydsl.MyDsl.Re");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSimultaneousAccess().getLogLogicalEnumRuleCall_2_0_0());
					}
					lv_log_2_0=ruleLogical
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimultaneousRule());
						}
						add(
							$current,
							"log",
							lv_log_2_0,
							"org.xtext.example.mydsl.MyDsl.Logical");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSimultaneousAccess().getSim2ReParserRuleCall_2_1_0());
					}
					lv_sim2_3_0=ruleRe
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimultaneousRule());
						}
						add(
							$current,
							"sim2",
							lv_sim2_3_0,
							"org.xtext.example.mydsl.MyDsl.Re");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getSimultaneousAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleDispersed
entryRuleDispersed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDispersedRule()); }
	iv_ruleDispersed=ruleDispersed
	{ $current=$iv_ruleDispersed.current; }
	EOF;

// Rule Dispersed
ruleDispersed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDispersedAccess().getDispReParserRuleCall_0());
			}
			lv_disp_0_0=ruleRe
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDispersedRule());
				}
				add(
					$current,
					"disp",
					lv_disp_0_0,
					"org.xtext.example.mydsl.MyDsl.Re");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleRe
entryRuleRe returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReRule()); }
	iv_ruleRe=ruleRe
	{ $current=$iv_ruleRe.current.getText(); }
	EOF;

// Rule Re
ruleRe returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getReAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				this_ID_2=RULE_ID
				{
					$current.merge(this_ID_2);
				}
				{
					newLeafNode(this_ID_2, grammarAccess.getReAccess().getIDTerminalRuleCall_1_1_0());
				}
				this_ID_3=RULE_ID
				{
					$current.merge(this_ID_3);
				}
				{
					newLeafNode(this_ID_3, grammarAccess.getReAccess().getIDTerminalRuleCall_1_1_1());
				}
			)?
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleRelationalQuery
entryRuleRelationalQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalQueryRule()); }
	iv_ruleRelationalQuery=ruleRelationalQuery
	{ $current=$iv_ruleRelationalQuery.current; }
	EOF;

// Rule RelationalQuery
ruleRelationalQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalQueryAccess().getQuery1ParserRuleCall_0());
		}
		this_Query1_0=ruleQuery1
		{
			$current = $this_Query1_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRelationalQueryAccess().getQuery2ParserRuleCall_1());
		}
		this_Query2_1=ruleQuery2
		{
			$current = $this_Query2_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRelationalQueryAccess().getQuery3ParserRuleCall_2());
		}
		this_Query3_2=ruleQuery3
		{
			$current = $this_Query3_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQuery1
entryRuleQuery1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuery1Rule()); }
	iv_ruleQuery1=ruleQuery1
	{ $current=$iv_ruleQuery1.current; }
	EOF;

// Rule Query1
ruleQuery1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getQuery1Access().getIfKeyword_0());
		}
		(
			(
				lv_factor_1_0=RULE_ID
				{
					newLeafNode(lv_factor_1_0, grammarAccess.getQuery1Access().getFactorIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuery1Rule());
					}
					setWithLastConsumed(
						$current,
						"factor",
						lv_factor_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			(
				lv_control_2_0=RULE_ID
				{
					newLeafNode(lv_control_2_0, grammarAccess.getQuery1Access().getControlIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuery1Rule());
					}
					setWithLastConsumed(
						$current,
						"control",
						lv_control_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_3='is'
		{
			newLeafNode(otherlv_3, grammarAccess.getQuery1Access().getIsKeyword_3());
		}
		(
			(
				lv_x_4_0=RULE_RANGEVALUE
				{
					newLeafNode(lv_x_4_0, grammarAccess.getQuery1Access().getXRangeValueTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuery1Rule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_4_0,
						"org.xtext.example.mydsl.MyDsl.rangeValue");
				}
			)
		)?
		(
			otherlv_5='added'
			{
				newLeafNode(otherlv_5, grammarAccess.getQuery1Access().getAddedKeyword_5());
			}
		)?
		(
			otherlv_6='removed'
			{
				newLeafNode(otherlv_6, grammarAccess.getQuery1Access().getRemovedKeyword_6());
			}
		)?
		(
			otherlv_7='in the range'
			{
				newLeafNode(otherlv_7, grammarAccess.getQuery1Access().getInTheRangeKeyword_7_0());
			}
			(
				(
					lv_start1_8_0=RULE_RANGEVALUE
					{
						newLeafNode(lv_start1_8_0, grammarAccess.getQuery1Access().getStart1RangeValueTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery1Rule());
						}
						setWithLastConsumed(
							$current,
							"start1",
							lv_start1_8_0,
							"org.xtext.example.mydsl.MyDsl.rangeValue");
					}
				)
			)
			otherlv_9='to'
			{
				newLeafNode(otherlv_9, grammarAccess.getQuery1Access().getToKeyword_7_2());
			}
			(
				(
					lv_end1_10_0=RULE_RANGEVALUE
					{
						newLeafNode(lv_end1_10_0, grammarAccess.getQuery1Access().getEnd1RangeValueTerminalRuleCall_7_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery1Rule());
						}
						setWithLastConsumed(
							$current,
							"end1",
							lv_end1_10_0,
							"org.xtext.example.mydsl.MyDsl.rangeValue");
					}
				)
			)
		)?
		otherlv_11='then'
		{
			newLeafNode(otherlv_11, grammarAccess.getQuery1Access().getThenKeyword_8());
		}
		(
			(
				lv_response_12_0=RULE_ID
				{
					newLeafNode(lv_response_12_0, grammarAccess.getQuery1Access().getResponseIDTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuery1Rule());
					}
					setWithLastConsumed(
						$current,
						"response",
						lv_response_12_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_13='is'
		{
			newLeafNode(otherlv_13, grammarAccess.getQuery1Access().getIsKeyword_10());
		}
		(
			(
				lv_y_14_0=RULE_RANGEVALUE
				{
					newLeafNode(lv_y_14_0, grammarAccess.getQuery1Access().getYRangeValueTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuery1Rule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_14_0,
						"org.xtext.example.mydsl.MyDsl.rangeValue");
				}
			)
		)?
		(
			otherlv_15='in the range'
			{
				newLeafNode(otherlv_15, grammarAccess.getQuery1Access().getInTheRangeKeyword_12_0());
			}
			(
				(
					lv_start2_16_0=RULE_RANGEVALUE
					{
						newLeafNode(lv_start2_16_0, grammarAccess.getQuery1Access().getStart2RangeValueTerminalRuleCall_12_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery1Rule());
						}
						setWithLastConsumed(
							$current,
							"start2",
							lv_start2_16_0,
							"org.xtext.example.mydsl.MyDsl.rangeValue");
					}
				)
			)
			otherlv_17='to'
			{
				newLeafNode(otherlv_17, grammarAccess.getQuery1Access().getToKeyword_12_2());
			}
			(
				(
					lv_end2_18_0=RULE_RANGEVALUE
					{
						newLeafNode(lv_end2_18_0, grammarAccess.getQuery1Access().getEnd2RangeValueTerminalRuleCall_12_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery1Rule());
						}
						setWithLastConsumed(
							$current,
							"end2",
							lv_end2_18_0,
							"org.xtext.example.mydsl.MyDsl.rangeValue");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleQuery2
entryRuleQuery2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuery2Rule()); }
	iv_ruleQuery2=ruleQuery2
	{ $current=$iv_ruleQuery2.current; }
	EOF;

// Rule Query2
ruleQuery2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='compare'
		{
			newLeafNode(otherlv_0, grammarAccess.getQuery2Access().getCompareKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuery2Access().getFunction1FunctionEnumRuleCall_1_0());
				}
				lv_function1_1_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuery2Rule());
					}
					set(
						$current,
						"function1",
						lv_function1_1_0,
						"org.xtext.example.mydsl.MyDsl.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_response1_2_0=RULE_ID
				{
					newLeafNode(lv_response1_2_0, grammarAccess.getQuery2Access().getResponse1IDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuery2Rule());
					}
					setWithLastConsumed(
						$current,
						"response1",
						lv_response1_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			(
				lv_factor1_3_0=RULE_ID
				{
					newLeafNode(lv_factor1_3_0, grammarAccess.getQuery2Access().getFactor1IDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuery2Rule());
					}
					setWithLastConsumed(
						$current,
						"factor1",
						lv_factor1_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_4='and'
		{
			newLeafNode(otherlv_4, grammarAccess.getQuery2Access().getAndKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuery2Access().getFunction2FunctionEnumRuleCall_5_0());
				}
				lv_function2_5_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuery2Rule());
					}
					set(
						$current,
						"function2",
						lv_function2_5_0,
						"org.xtext.example.mydsl.MyDsl.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_response2_6_0=RULE_ID
				{
					newLeafNode(lv_response2_6_0, grammarAccess.getQuery2Access().getResponse2IDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuery2Rule());
					}
					setWithLastConsumed(
						$current,
						"response2",
						lv_response2_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			(
				lv_factor2_7_0=RULE_ID
				{
					newLeafNode(lv_factor2_7_0, grammarAccess.getQuery2Access().getFactor2IDTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuery2Rule());
					}
					setWithLastConsumed(
						$current,
						"factor2",
						lv_factor2_7_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
	)
;

// Entry rule entryRuleQuery3
entryRuleQuery3 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuery3Rule()); }
	iv_ruleQuery3=ruleQuery3
	{ $current=$iv_ruleQuery3.current; }
	EOF;

// Rule Query3
ruleQuery3 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getQuery3Access().getIfKeyword_0());
		}
		(
			(
				(
					lv_factor1_1_0=RULE_ID
					{
						newLeafNode(lv_factor1_1_0, grammarAccess.getQuery3Access().getFactor1IDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery3Rule());
						}
						setWithLastConsumed(
							$current,
							"factor1",
							lv_factor1_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			(
				(
					lv_control1_2_0=RULE_ID
					{
						newLeafNode(lv_control1_2_0, grammarAccess.getQuery3Access().getControl1IDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery3Rule());
						}
						setWithLastConsumed(
							$current,
							"control1",
							lv_control1_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			otherlv_3='is'
			{
				newLeafNode(otherlv_3, grammarAccess.getQuery3Access().getIsKeyword_1_2());
			}
			(
				otherlv_4='at'
				{
					newLeafNode(otherlv_4, grammarAccess.getQuery3Access().getAtKeyword_1_3_0());
				}
				otherlv_5='level'
				{
					newLeafNode(otherlv_5, grammarAccess.getQuery3Access().getLevelKeyword_1_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getQuery3Access().getLevel2LevelsEnumRuleCall_1_3_2_0());
						}
						lv_Level2_6_0=ruleLevels
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQuery3Rule());
							}
							set(
								$current,
								"Level2",
								lv_Level2_6_0,
								"org.xtext.example.mydsl.MyDsl.Levels");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				(
					lv_x2_7_0=RULE_RANGEVALUE
					{
						newLeafNode(lv_x2_7_0, grammarAccess.getQuery3Access().getX2RangeValueTerminalRuleCall_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery3Rule());
						}
						setWithLastConsumed(
							$current,
							"x2",
							lv_x2_7_0,
							"org.xtext.example.mydsl.MyDsl.rangeValue");
					}
				)
			)?
			(
				otherlv_8='and'
				{
					newLeafNode(otherlv_8, grammarAccess.getQuery3Access().getAndKeyword_1_5());
				}
			)?
		)*
		otherlv_9='then'
		{
			newLeafNode(otherlv_9, grammarAccess.getQuery3Access().getThenKeyword_2());
		}
		(
			(
				(
					lv_response1_10_0=RULE_ID
					{
						newLeafNode(lv_response1_10_0, grammarAccess.getQuery3Access().getResponse1IDTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery3Rule());
						}
						setWithLastConsumed(
							$current,
							"response1",
							lv_response1_10_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_11='is'
			{
				newLeafNode(otherlv_11, grammarAccess.getQuery3Access().getIsKeyword_3_1());
			}
			(
				otherlv_12='at'
				{
					newLeafNode(otherlv_12, grammarAccess.getQuery3Access().getAtKeyword_3_2_0());
				}
				otherlv_13='level'
				{
					newLeafNode(otherlv_13, grammarAccess.getQuery3Access().getLevelKeyword_3_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getQuery3Access().getLevel4LevelsEnumRuleCall_3_2_2_0());
						}
						lv_Level4_14_0=ruleLevels
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQuery3Rule());
							}
							set(
								$current,
								"Level4",
								lv_Level4_14_0,
								"org.xtext.example.mydsl.MyDsl.Levels");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				(
					lv_x4_15_0=RULE_RANGEVALUE
					{
						newLeafNode(lv_x4_15_0, grammarAccess.getQuery3Access().getX4RangeValueTerminalRuleCall_3_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery3Rule());
						}
						setWithLastConsumed(
							$current,
							"x4",
							lv_x4_15_0,
							"org.xtext.example.mydsl.MyDsl.rangeValue");
					}
				)
			)?
			(
				otherlv_16='and'
				{
					newLeafNode(otherlv_16, grammarAccess.getQuery3Access().getAndKeyword_3_4());
				}
			)?
		)*
		otherlv_17='where'
		{
			newLeafNode(otherlv_17, grammarAccess.getQuery3Access().getWhereKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getQuery3Access().getLevelLevelsEnumRuleCall_5_0_0());
					}
					lv_level_18_0=ruleLevels
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuery3Rule());
						}
						set(
							$current,
							"level",
							lv_level_18_0,
							"org.xtext.example.mydsl.MyDsl.Levels");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_19='for'
			{
				newLeafNode(otherlv_19, grammarAccess.getQuery3Access().getForKeyword_5_1());
			}
			(
				(
					lv_factor_20_0=RULE_ID
					{
						newLeafNode(lv_factor_20_0, grammarAccess.getQuery3Access().getFactorIDTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery3Rule());
						}
						setWithLastConsumed(
							$current,
							"factor",
							lv_factor_20_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			(
				(
					lv_control_21_0=RULE_ID
					{
						newLeafNode(lv_control_21_0, grammarAccess.getQuery3Access().getControlIDTerminalRuleCall_5_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery3Rule());
						}
						setWithLastConsumed(
							$current,
							"control",
							lv_control_21_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			(
				(
					lv_response_22_0=RULE_ID
					{
						newLeafNode(lv_response_22_0, grammarAccess.getQuery3Access().getResponseIDTerminalRuleCall_5_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery3Rule());
						}
						setWithLastConsumed(
							$current,
							"response",
							lv_response_22_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			otherlv_23='is'
			{
				newLeafNode(otherlv_23, grammarAccess.getQuery3Access().getIsKeyword_5_5());
			}
			otherlv_24='in the range'
			{
				newLeafNode(otherlv_24, grammarAccess.getQuery3Access().getInTheRangeKeyword_5_6());
			}
			(
				(
					lv_start1_25_0=RULE_RANGEVALUE
					{
						newLeafNode(lv_start1_25_0, grammarAccess.getQuery3Access().getStart1RangeValueTerminalRuleCall_5_7_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery3Rule());
						}
						setWithLastConsumed(
							$current,
							"start1",
							lv_start1_25_0,
							"org.xtext.example.mydsl.MyDsl.rangeValue");
					}
				)
			)
			otherlv_26='to'
			{
				newLeafNode(otherlv_26, grammarAccess.getQuery3Access().getToKeyword_5_8());
			}
			(
				(
					lv_end1_27_0=RULE_RANGEVALUE
					{
						newLeafNode(lv_end1_27_0, grammarAccess.getQuery3Access().getEnd1RangeValueTerminalRuleCall_5_9_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuery3Rule());
						}
						setWithLastConsumed(
							$current,
							"end1",
							lv_end1_27_0,
							"org.xtext.example.mydsl.MyDsl.rangeValue");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExperiment
entryRuleExperiment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExperimentRule()); }
	iv_ruleExperiment=ruleExperiment
	{ $current=$iv_ruleExperiment.current; }
	EOF;

// Rule Experiment
ruleExperiment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='experiment'
		{
			newLeafNode(otherlv_0, grammarAccess.getExperimentAccess().getExperimentKeyword_0());
		}
		(
			(
				lv_expName_1_0=RULE_ID
				{
					newLeafNode(lv_expName_1_0, grammarAccess.getExperimentAccess().getExpNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExperimentRule());
					}
					setWithLastConsumed(
						$current,
						"expName",
						lv_expName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getExperimentAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='design'
		{
			newLeafNode(otherlv_3, grammarAccess.getExperimentAccess().getDesignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExperimentAccess().getExpDesignDesignParserRuleCall_4_0());
				}
				lv_expDesign_4_0=ruleDesign
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExperimentRule());
					}
					set(
						$current,
						"expDesign",
						lv_expDesign_4_0,
						"org.xtext.example.mydsl.MyDsl.Design");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='performance measure'
		{
			newLeafNode(otherlv_5, grammarAccess.getExperimentAccess().getPerformanceMeasureKeyword_5());
		}
		otherlv_6='is'
		{
			newLeafNode(otherlv_6, grammarAccess.getExperimentAccess().getIsKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExperimentAccess().getPerfMeasurePerformanceMeasureParserRuleCall_7_0());
				}
				lv_perfMeasure_7_0=rulePerformanceMeasure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExperimentRule());
					}
					set(
						$current,
						"perfMeasure",
						lv_perfMeasure_7_0,
						"org.xtext.example.mydsl.MyDsl.PerformanceMeasure");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getExperimentAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleDesign
entryRuleDesign returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDesignRule()); }
	iv_ruleDesign=ruleDesign
	{ $current=$iv_ruleDesign.current; }
	EOF;

// Rule Design
ruleDesign returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getDesignAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			otherlv_1='designType'
			{
				newLeafNode(otherlv_1, grammarAccess.getDesignAccess().getDesignTypeKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDesignAccess().getDesignTypeDesignTypeEnumRuleCall_1_1_0());
					}
					lv_designType_2_0=ruleDesignType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDesignRule());
						}
						set(
							$current,
							"designType",
							lv_designType_2_0,
							"org.xtext.example.mydsl.MyDsl.DesignType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='constraints'
			{
				newLeafNode(otherlv_3, grammarAccess.getDesignAccess().getConstraintsKeyword_2_0());
			}
			(
				(
					lv_constraint_4_0=RULE_ID
					{
						newLeafNode(lv_constraint_4_0, grammarAccess.getDesignAccess().getConstraintIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDesignRule());
						}
						setWithLastConsumed(
							$current,
							"constraint",
							lv_constraint_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDesignAccess().getIterationIterationParserRuleCall_3_0());
				}
				lv_iteration_5_0=ruleIteration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDesignRule());
					}
					set(
						$current,
						"iteration",
						lv_iteration_5_0,
						"org.xtext.example.mydsl.MyDsl.Iteration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_6='variables'
			{
				newLeafNode(otherlv_6, grammarAccess.getDesignAccess().getVariablesKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDesignAccess().getVariablesVariablesParserRuleCall_4_1_0());
					}
					lv_variables_7_0=ruleVariables
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDesignRule());
						}
						set(
							$current,
							"variables",
							lv_variables_7_0,
							"org.xtext.example.mydsl.MyDsl.Variables");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getDesignAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleVariables
entryRuleVariables returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariablesRule()); }
	iv_ruleVariables=ruleVariables
	{ $current=$iv_ruleVariables.current; }
	EOF;

// Rule Variables
ruleVariables returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariablesAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariablesAccess().getIndependentVariablesIndependentVariablesParserRuleCall_1_0());
				}
				lv_independentVariables_1_0=ruleIndependentVariables
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariablesRule());
					}
					set(
						$current,
						"independentVariables",
						lv_independentVariables_1_0,
						"org.xtext.example.mydsl.MyDsl.IndependentVariables");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariablesAccess().getControlVariablesControlVariablesParserRuleCall_2_0());
				}
				lv_controlVariables_2_0=ruleControlVariables
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariablesRule());
					}
					set(
						$current,
						"controlVariables",
						lv_controlVariables_2_0,
						"org.xtext.example.mydsl.MyDsl.ControlVariables");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getVariablesAccess().getDependentVariablesDependentVariablesParserRuleCall_3_0());
				}
				lv_dependentVariables_3_0=ruleDependentVariables
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariablesRule());
					}
					set(
						$current,
						"dependentVariables",
						lv_dependentVariables_3_0,
						"org.xtext.example.mydsl.MyDsl.DependentVariables");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getVariablesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleIndependentVariables
entryRuleIndependentVariables returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndependentVariablesRule()); }
	iv_ruleIndependentVariables=ruleIndependentVariables
	{ $current=$iv_ruleIndependentVariables.current; }
	EOF;

// Rule IndependentVariables
ruleIndependentVariables returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='independent'
		{
			newLeafNode(otherlv_0, grammarAccess.getIndependentVariablesAccess().getIndependentKeyword_0());
		}
		otherlv_1='variables'
		{
			newLeafNode(otherlv_1, grammarAccess.getIndependentVariablesAccess().getVariablesKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getIndependentVariablesAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndependentVariablesAccess().getVariablesFactorLevelsParserRuleCall_3_0());
				}
				lv_variables_3_0=ruleFactorLevels
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndependentVariablesRule());
					}
					add(
						$current,
						"variables",
						lv_variables_3_0,
						"org.xtext.example.mydsl.MyDsl.FactorLevels");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getIndependentVariablesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleControlVariables
entryRuleControlVariables returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlVariablesRule()); }
	iv_ruleControlVariables=ruleControlVariables
	{ $current=$iv_ruleControlVariables.current; }
	EOF;

// Rule ControlVariables
ruleControlVariables returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='control'
		{
			newLeafNode(otherlv_0, grammarAccess.getControlVariablesAccess().getControlKeyword_0());
		}
		otherlv_1='variables'
		{
			newLeafNode(otherlv_1, grammarAccess.getControlVariablesAccess().getVariablesKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getControlVariablesAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					lv_controlName_3_0=RULE_ID
					{
						newLeafNode(lv_controlName_3_0, grammarAccess.getControlVariablesAccess().getControlNameIDTerminalRuleCall_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getControlVariablesRule());
						}
						setWithLastConsumed(
							$current,
							"controlName",
							lv_controlName_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getControlVariablesAccess().getColonKeyword_3_1());
			}
			otherlv_5='type'
			{
				newLeafNode(otherlv_5, grammarAccess.getControlVariablesAccess().getTypeKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getControlVariablesAccess().getControlTypeVariableTypeEnumRuleCall_3_3_0());
					}
					lv_controlType_6_0=ruleVariableType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getControlVariablesRule());
						}
						set(
							$current,
							"controlType",
							lv_controlType_6_0,
							"org.xtext.example.mydsl.MyDsl.VariableType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='with'
			{
				newLeafNode(otherlv_7, grammarAccess.getControlVariablesAccess().getWithKeyword_3_4());
			}
			otherlv_8='values'
			{
				newLeafNode(otherlv_8, grammarAccess.getControlVariablesAccess().getValuesKeyword_3_5());
			}
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getControlVariablesAccess().getLeftCurlyBracketKeyword_3_6());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getControlVariablesAccess().getControlValueValuesParserRuleCall_3_7_0());
					}
					lv_controlValue_10_0=ruleValues
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getControlVariablesRule());
						}
						set(
							$current,
							"controlValue",
							lv_controlValue_10_0,
							"org.xtext.example.mydsl.MyDsl.Values");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getControlVariablesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDependentVariables
entryRuleDependentVariables returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDependentVariablesRule()); }
	iv_ruleDependentVariables=ruleDependentVariables
	{ $current=$iv_ruleDependentVariables.current; }
	EOF;

// Rule DependentVariables
ruleDependentVariables returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='dependent'
		{
			newLeafNode(otherlv_0, grammarAccess.getDependentVariablesAccess().getDependentKeyword_0());
		}
		otherlv_1='variables'
		{
			newLeafNode(otherlv_1, grammarAccess.getDependentVariablesAccess().getVariablesKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDependentVariablesAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDependentVariablesAccess().getResponseNameResponseParserRuleCall_3_0());
				}
				lv_responseName_3_0=ruleResponse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDependentVariablesRule());
					}
					set(
						$current,
						"responseName",
						lv_responseName_3_0,
						"org.xtext.example.mydsl.MyDsl.Response");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleFactorLevels
entryRuleFactorLevels returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorLevelsRule()); }
	iv_ruleFactorLevels=ruleFactorLevels
	{ $current=$iv_ruleFactorLevels.current; }
	EOF;

// Rule FactorLevels
ruleFactorLevels returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_facName_0_0=RULE_ID
				{
					newLeafNode(lv_facName_0_0, grammarAccess.getFactorLevelsAccess().getFacNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFactorLevelsRule());
					}
					setWithLastConsumed(
						$current,
						"facName",
						lv_facName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='are'
		{
			newLeafNode(otherlv_1, grammarAccess.getFactorLevelsAccess().getAreKeyword_1());
		}
		otherlv_2='at'
		{
			newLeafNode(otherlv_2, grammarAccess.getFactorLevelsAccess().getAtKeyword_2());
		}
		otherlv_3='levels'
		{
			newLeafNode(otherlv_3, grammarAccess.getFactorLevelsAccess().getLevelsKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getFactorLevelsAccess().getColonKeyword_4());
		}
		(
			(
				lv_l_5_0=RULE_FACTORLEVELVALUE
				{
					newLeafNode(lv_l_5_0, grammarAccess.getFactorLevelsAccess().getLFactorLevelValueTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFactorLevelsRule());
					}
					setWithLastConsumed(
						$current,
						"l",
						lv_l_5_0,
						"org.xtext.example.mydsl.MyDsl.factorLevelValue");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorLevelsAccess().getL1LevelsEnumRuleCall_6_0_0());
					}
					lv_l1_6_0=ruleLevels
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorLevelsRule());
						}
						set(
							$current,
							"l1",
							lv_l1_6_0,
							"org.xtext.example.mydsl.MyDsl.Levels");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='where'
			{
				newLeafNode(otherlv_7, grammarAccess.getFactorLevelsAccess().getWhereKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorLevelsAccess().getL2LevelsEnumRuleCall_6_2_0());
					}
					lv_l2_8_0=ruleLevels
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorLevelsRule());
						}
						set(
							$current,
							"l2",
							lv_l2_8_0,
							"org.xtext.example.mydsl.MyDsl.Levels");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='is'
			{
				newLeafNode(otherlv_9, grammarAccess.getFactorLevelsAccess().getIsKeyword_6_3());
			}
			otherlv_10='in the range'
			{
				newLeafNode(otherlv_10, grammarAccess.getFactorLevelsAccess().getInTheRangeKeyword_6_4());
			}
			(
				(
					lv_start1_11_0=RULE_RANGEVALUE
					{
						newLeafNode(lv_start1_11_0, grammarAccess.getFactorLevelsAccess().getStart1RangeValueTerminalRuleCall_6_5_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFactorLevelsRule());
						}
						setWithLastConsumed(
							$current,
							"start1",
							lv_start1_11_0,
							"org.xtext.example.mydsl.MyDsl.rangeValue");
					}
				)
			)
			otherlv_12='to'
			{
				newLeafNode(otherlv_12, grammarAccess.getFactorLevelsAccess().getToKeyword_6_6());
			}
			(
				(
					lv_end1_13_0=RULE_RANGEVALUE
					{
						newLeafNode(lv_end1_13_0, grammarAccess.getFactorLevelsAccess().getEnd1RangeValueTerminalRuleCall_6_7_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFactorLevelsRule());
						}
						setWithLastConsumed(
							$current,
							"end1",
							lv_end1_13_0,
							"org.xtext.example.mydsl.MyDsl.rangeValue");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleResponse
entryRuleResponse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResponseRule()); }
	iv_ruleResponse=ruleResponse
	{ $current=$iv_ruleResponse.current; }
	EOF;

// Rule Response
ruleResponse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_responseName_0_0=RULE_ID
				{
					newLeafNode(lv_responseName_0_0, grammarAccess.getResponseAccess().getResponseNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResponseRule());
					}
					setWithLastConsumed(
						$current,
						"responseName",
						lv_responseName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getResponseAccess().getColonKeyword_1());
		}
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getResponseAccess().getTypeKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResponseAccess().getResponseTypeResponseTypeEnumRuleCall_3_0());
				}
				lv_responseType_3_0=ruleResponseType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResponseRule());
					}
					set(
						$current,
						"responseType",
						lv_responseType_3_0,
						"org.xtext.example.mydsl.MyDsl.ResponseType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getResponseAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleIteration
entryRuleIteration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIterationRule()); }
	iv_ruleIteration=ruleIteration
	{ $current=$iv_ruleIteration.current; }
	EOF;

// Rule Iteration
ruleIteration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='number'
		{
			newLeafNode(otherlv_0, grammarAccess.getIterationAccess().getNumberKeyword_0());
		}
		otherlv_1='of'
		{
			newLeafNode(otherlv_1, grammarAccess.getIterationAccess().getOfKeyword_1());
		}
		otherlv_2='iterations'
		{
			newLeafNode(otherlv_2, grammarAccess.getIterationAccess().getIterationsKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getIterationAccess().getColonKeyword_3());
		}
		(
			(
				lv_iterations_4_0=RULE_INT
				{
					newLeafNode(lv_iterations_4_0, grammarAccess.getIterationAccess().getIterationsINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIterationRule());
					}
					setWithLastConsumed(
						$current,
						"iterations",
						lv_iterations_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRulePerformanceMeasure
entryRulePerformanceMeasure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPerformanceMeasureRule()); }
	iv_rulePerformanceMeasure=rulePerformanceMeasure
	{ $current=$iv_rulePerformanceMeasure.current; }
	EOF;

// Rule PerformanceMeasure
rulePerformanceMeasure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getPerformanceMeasureAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				lv_expectedResponse_1_0=RULE_ID
				{
					newLeafNode(lv_expectedResponse_1_0, grammarAccess.getPerformanceMeasureAccess().getExpectedResponseIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPerformanceMeasureRule());
					}
					setWithLastConsumed(
						$current,
						"expectedResponse",
						lv_expectedResponse_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getPerformanceMeasureAccess().getEqualsSignKeyword_2());
		}
		(
			(
				lv_er_3_0=RULE_RANGEVALUE
				{
					newLeafNode(lv_er_3_0, grammarAccess.getPerformanceMeasureAccess().getErRangeValueTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPerformanceMeasureRule());
					}
					setWithLastConsumed(
						$current,
						"er",
						lv_er_3_0,
						"org.xtext.example.mydsl.MyDsl.rangeValue");
				}
			)
		)
		otherlv_4=' +-'
		{
			newLeafNode(otherlv_4, grammarAccess.getPerformanceMeasureAccess().getSpacePlusSignHyphenMinusKeyword_4());
		}
		(
			(
				lv_std_5_0=RULE_RANGEVALUE
				{
					newLeafNode(lv_std_5_0, grammarAccess.getPerformanceMeasureAccess().getStdRangeValueTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPerformanceMeasureRule());
					}
					setWithLastConsumed(
						$current,
						"std",
						lv_std_5_0,
						"org.xtext.example.mydsl.MyDsl.rangeValue");
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getPerformanceMeasureAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Rule VariableType
ruleVariableType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='QUALITATIVE'
			{
				$current = grammarAccess.getVariableTypeAccess().getQUALITATIVEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVariableTypeAccess().getQUALITATIVEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='QUANTITATIVE'
			{
				$current = grammarAccess.getVariableTypeAccess().getQUANTITATIVEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVariableTypeAccess().getQUANTITATIVEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='CONTINOUS'
			{
				$current = grammarAccess.getVariableTypeAccess().getCONTINOUSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVariableTypeAccess().getCONTINOUSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='DISCRETE'
			{
				$current = grammarAccess.getVariableTypeAccess().getDISCRETEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getVariableTypeAccess().getDISCRETEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='BINARY'
			{
				$current = grammarAccess.getVariableTypeAccess().getBINARYEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getVariableTypeAccess().getBINARYEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='NONBINARY'
			{
				$current = grammarAccess.getVariableTypeAccess().getNONBINARYEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getVariableTypeAccess().getNONBINARYEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule Expression
ruleExpression returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='TRUE'
			{
				$current = grammarAccess.getExpressionAccess().getTRUEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getExpressionAccess().getTRUEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='FALSE'
			{
				$current = grammarAccess.getExpressionAccess().getFALSEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getExpressionAccess().getFALSEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule Links
ruleLinks returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='is'
			{
				$current = grammarAccess.getLinksAccess().getIsEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLinksAccess().getIsEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='occurs'
			{
				$current = grammarAccess.getLinksAccess().getOccursEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLinksAccess().getOccursEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='to'
			{
				$current = grammarAccess.getLinksAccess().getToEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLinksAccess().getToEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='in'
			{
				$current = grammarAccess.getLinksAccess().getInEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getLinksAccess().getInEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule Temporal
ruleTemporal returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='precedes'
			{
				$current = grammarAccess.getTemporalAccess().getPrecedesEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTemporalAccess().getPrecedesEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='between'
			{
				$current = grammarAccess.getTemporalAccess().getBetweenEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTemporalAccess().getBetweenEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='eventually'
			{
				$current = grammarAccess.getTemporalAccess().getEventuallyEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTemporalAccess().getEventuallyEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='always'
			{
				$current = grammarAccess.getTemporalAccess().getAlwaysEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTemporalAccess().getAlwaysEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='before'
			{
				$current = grammarAccess.getTemporalAccess().getBeforeEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTemporalAccess().getBeforeEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='after'
			{
				$current = grammarAccess.getTemporalAccess().getAfterEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getTemporalAccess().getAfterEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='until'
			{
				$current = grammarAccess.getTemporalAccess().getUntilEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getTemporalAccess().getUntilEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='never'
			{
				$current = grammarAccess.getTemporalAccess().getNeverEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getTemporalAccess().getNeverEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='leads'
			{
				$current = grammarAccess.getTemporalAccess().getLeadsEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getTemporalAccess().getLeadsEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='absent'
			{
				$current = grammarAccess.getTemporalAccess().getAbsentEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getTemporalAccess().getAbsentEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='exists'
			{
				$current = grammarAccess.getTemporalAccess().getExistsEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getTemporalAccess().getExistsEnumLiteralDeclaration_10());
			}
		)
	)
;

// Rule Logical
ruleLogical returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='and'
			{
				$current = grammarAccess.getLogicalAccess().getAndEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLogicalAccess().getAndEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='or'
			{
				$current = grammarAccess.getLogicalAccess().getOrEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLogicalAccess().getOrEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='not'
			{
				$current = grammarAccess.getLogicalAccess().getNotEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLogicalAccess().getNotEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Coherence
ruleCoherence returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='EXPLAIN'
			{
				$current = grammarAccess.getCoherenceAccess().getEXPLAINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCoherenceAccess().getEXPLAINEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ANALOGOUS'
			{
				$current = grammarAccess.getCoherenceAccess().getANALOGOUSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCoherenceAccess().getANALOGOUSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='DATA'
			{
				$current = grammarAccess.getCoherenceAccess().getDATAEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCoherenceAccess().getDATAEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='CONTRADICT'
			{
				$current = grammarAccess.getCoherenceAccess().getCONTRADICTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCoherenceAccess().getCONTRADICTEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule Function
ruleFunction returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='MIN'
			{
				$current = grammarAccess.getFunctionAccess().getMINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFunctionAccess().getMINEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='MAX'
			{
				$current = grammarAccess.getFunctionAccess().getMAXEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFunctionAccess().getMAXEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='EXP'
			{
				$current = grammarAccess.getFunctionAccess().getEXPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getFunctionAccess().getEXPEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='INVERSE'
			{
				$current = grammarAccess.getFunctionAccess().getINVERSEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getFunctionAccess().getINVERSEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='SIN'
			{
				$current = grammarAccess.getFunctionAccess().getSINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getFunctionAccess().getSINEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='COS'
			{
				$current = grammarAccess.getFunctionAccess().getCOSEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getFunctionAccess().getCOSEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='TAN'
			{
				$current = grammarAccess.getFunctionAccess().getTANEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getFunctionAccess().getTANEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='FACTORIAL'
			{
				$current = grammarAccess.getFunctionAccess().getFACTORIALEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getFunctionAccess().getFACTORIALEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='LOG'
			{
				$current = grammarAccess.getFunctionAccess().getLOGEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getFunctionAccess().getLOGEnumLiteralDeclaration_8());
			}
		)
	)
;

// Rule Levels
ruleLevels returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='HIGH'
			{
				$current = grammarAccess.getLevelsAccess().getHIGHEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLevelsAccess().getHIGHEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='MEDIUM'
			{
				$current = grammarAccess.getLevelsAccess().getMEDIUMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLevelsAccess().getMEDIUMEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='LOW'
			{
				$current = grammarAccess.getLevelsAccess().getLOWEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLevelsAccess().getLOWEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule DesignType
ruleDesignType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='FULLFACTORIAL'
			{
				$current = grammarAccess.getDesignTypeAccess().getFULLFACTORIALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDesignTypeAccess().getFULLFACTORIALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='FRACTIONALFACTORIAL'
			{
				$current = grammarAccess.getDesignTypeAccess().getFRACTIONALFACTORIALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDesignTypeAccess().getFRACTIONALFACTORIALEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='OTHERS'
			{
				$current = grammarAccess.getDesignTypeAccess().getOTHERSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDesignTypeAccess().getOTHERSEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule ResponseType
ruleResponseType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='SIMPLE'
			{
				$current = grammarAccess.getResponseTypeAccess().getSIMPLEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getResponseTypeAccess().getSIMPLEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='COMPOSITE'
			{
				$current = grammarAccess.getResponseTypeAccess().getCOMPOSITEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getResponseTypeAccess().getCOMPOSITEEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_RANGEVALUE : RULE_INT '.'? RULE_INT?;

RULE_FACTORLEVELVALUE : RULE_RANGEVALUE (',' RULE_RANGEVALUE)*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
