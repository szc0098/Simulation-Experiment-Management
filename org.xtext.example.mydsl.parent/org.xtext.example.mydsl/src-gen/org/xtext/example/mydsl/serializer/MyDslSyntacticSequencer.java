/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

@SuppressWarnings("all")
public class MyDslSyntacticSequencer extends AbstractSyntacticSequencer {

	protected MyDslGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Factor___PropertiesKeyword_7_0_LeftCurlyBracketKeyword_7_1_RightCurlyBracketKeyword_7_3__q;
	protected AbstractElementAlias match_Hypothesis___CoherenceKeyword_4_0_ModelKeyword_4_1_LeftCurlyBracketKeyword_4_2_RightCurlyBracketKeyword_4_4__q;
	protected AbstractElementAlias match_Hypothesis___EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3__q;
	protected AbstractElementAlias match_Hypothesis___MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q;
	protected AbstractElementAlias match_Hypothesis___RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q;
	protected AbstractElementAlias match_Hypothesis_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___or_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3_____RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q___or_____MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q___EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___CoherenceKeyword_4_0_ModelKeyword_4_1_LeftCurlyBracketKeyword_4_2_RightCurlyBracketKeyword_4_4___RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q___or_____MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___or_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3_____RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q________q;
	protected AbstractElementAlias match_Query1_AddedKeyword_5_q;
	protected AbstractElementAlias match_Query1_RemovedKeyword_6_q;
	protected AbstractElementAlias match_Query2_Query3___CompareKeyword_0_AndKeyword_4___or___IfKeyword_0___IsKeyword_1_2_AndKeyword_1_5_q__a_ThenKeyword_2_WhereKeyword_4__;
	protected AbstractElementAlias match_Query3_AndKeyword_1_5_q;
	protected AbstractElementAlias match_Query3_AndKeyword_3_4_q;
	protected AbstractElementAlias match_Query3___AndKeyword_1_5_q_IsKeyword_1_2__a;
	protected AbstractElementAlias match_Query3___AndKeyword_1_5_q_IsKeyword_1_2__p;
	protected AbstractElementAlias match_Query3___IsKeyword_1_2_AndKeyword_1_5_q__a;
	protected AbstractElementAlias match_Query3___IsKeyword_1_2_AndKeyword_1_5_q__p;
	protected AbstractElementAlias match_Reaction_SpacePlusSignSpaceKeyword_1_q;
	protected AbstractElementAlias match_properties_CommaKeyword_3_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (MyDslGrammarAccess) access;
		match_Factor___PropertiesKeyword_7_0_LeftCurlyBracketKeyword_7_1_RightCurlyBracketKeyword_7_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getFactorAccess().getPropertiesKeyword_7_0()), new TokenAlias(false, false, grammarAccess.getFactorAccess().getLeftCurlyBracketKeyword_7_1()), new TokenAlias(false, false, grammarAccess.getFactorAccess().getRightCurlyBracketKeyword_7_3()));
		match_Hypothesis___CoherenceKeyword_4_0_ModelKeyword_4_1_LeftCurlyBracketKeyword_4_2_RightCurlyBracketKeyword_4_4__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getCoherenceKeyword_4_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getModelKeyword_4_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_4_2()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_4_4()));
		match_Hypothesis___EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getEvidenceKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_3_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_3_3()));
		match_Hypothesis___MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getMechanisticKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getHypothesesKeyword_2_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_2_2()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_2_4()));
		match_Hypothesis___RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRelationalKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getHypothesesKeyword_5_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_5_2()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_5_4()));
		match_Hypothesis_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___or_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3_____RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q___or_____MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q___EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___CoherenceKeyword_4_0_ModelKeyword_4_1_LeftCurlyBracketKeyword_4_2_RightCurlyBracketKeyword_4_4___RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q___or_____MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___or_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3_____RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q________q = new AlternativeAlias(false, true, new GroupAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getEvidenceKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_3_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_3_3())), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRelationalKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getHypothesesKeyword_5_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_5_2()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_5_4()))), new GroupAlias(false, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getMechanisticKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getHypothesesKeyword_2_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_2_2()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_2_4())), new AlternativeAlias(false, false, new GroupAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getEvidenceKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_3_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_3_3())), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRelationalKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getHypothesesKeyword_5_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_5_2()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_5_4()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getEvidenceKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_3_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_3_3())))), new GroupAlias(false, false, new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getMechanisticKeyword_2_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getHypothesesKeyword_2_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_2_2()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_2_4())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getEvidenceKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_3_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_3_3())), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getCoherenceKeyword_4_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getModelKeyword_4_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_4_2()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_4_4()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRelationalKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getHypothesesKeyword_5_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_5_2()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_5_4()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getEvidenceKeyword_3_0()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getLeftCurlyBracketKeyword_3_1()), new TokenAlias(false, false, grammarAccess.getHypothesisAccess().getRightCurlyBracketKeyword_3_3())));
		match_Query1_AddedKeyword_5_q = new TokenAlias(false, true, grammarAccess.getQuery1Access().getAddedKeyword_5());
		match_Query1_RemovedKeyword_6_q = new TokenAlias(false, true, grammarAccess.getQuery1Access().getRemovedKeyword_6());
		match_Query2_Query3___CompareKeyword_0_AndKeyword_4___or___IfKeyword_0___IsKeyword_1_2_AndKeyword_1_5_q__a_ThenKeyword_2_WhereKeyword_4__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getQuery2Access().getCompareKeyword_0()), new TokenAlias(false, false, grammarAccess.getQuery2Access().getAndKeyword_4())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getQuery3Access().getIfKeyword_0()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getQuery3Access().getIsKeyword_1_2()), new TokenAlias(false, true, grammarAccess.getQuery3Access().getAndKeyword_1_5())), new TokenAlias(false, false, grammarAccess.getQuery3Access().getThenKeyword_2()), new TokenAlias(false, false, grammarAccess.getQuery3Access().getWhereKeyword_4())));
		match_Query3_AndKeyword_1_5_q = new TokenAlias(false, true, grammarAccess.getQuery3Access().getAndKeyword_1_5());
		match_Query3_AndKeyword_3_4_q = new TokenAlias(false, true, grammarAccess.getQuery3Access().getAndKeyword_3_4());
		match_Query3___AndKeyword_1_5_q_IsKeyword_1_2__a = new GroupAlias(true, true, new TokenAlias(false, true, grammarAccess.getQuery3Access().getAndKeyword_1_5()), new TokenAlias(false, false, grammarAccess.getQuery3Access().getIsKeyword_1_2()));
		match_Query3___AndKeyword_1_5_q_IsKeyword_1_2__p = new GroupAlias(true, false, new TokenAlias(false, true, grammarAccess.getQuery3Access().getAndKeyword_1_5()), new TokenAlias(false, false, grammarAccess.getQuery3Access().getIsKeyword_1_2()));
		match_Query3___IsKeyword_1_2_AndKeyword_1_5_q__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getQuery3Access().getIsKeyword_1_2()), new TokenAlias(false, true, grammarAccess.getQuery3Access().getAndKeyword_1_5()));
		match_Query3___IsKeyword_1_2_AndKeyword_1_5_q__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getQuery3Access().getIsKeyword_1_2()), new TokenAlias(false, true, grammarAccess.getQuery3Access().getAndKeyword_1_5()));
		match_Reaction_SpacePlusSignSpaceKeyword_1_q = new TokenAlias(false, true, grammarAccess.getReactionAccess().getSpacePlusSignSpaceKeyword_1());
		match_properties_CommaKeyword_3_q = new TokenAlias(false, true, grammarAccess.getPropertiesAccess().getCommaKeyword_3());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Factor___PropertiesKeyword_7_0_LeftCurlyBracketKeyword_7_1_RightCurlyBracketKeyword_7_3__q.equals(syntax))
				emit_Factor___PropertiesKeyword_7_0_LeftCurlyBracketKeyword_7_1_RightCurlyBracketKeyword_7_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Hypothesis___CoherenceKeyword_4_0_ModelKeyword_4_1_LeftCurlyBracketKeyword_4_2_RightCurlyBracketKeyword_4_4__q.equals(syntax))
				emit_Hypothesis___CoherenceKeyword_4_0_ModelKeyword_4_1_LeftCurlyBracketKeyword_4_2_RightCurlyBracketKeyword_4_4__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Hypothesis___EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3__q.equals(syntax))
				emit_Hypothesis___EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Hypothesis___MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q.equals(syntax))
				emit_Hypothesis___MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Hypothesis___RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q.equals(syntax))
				emit_Hypothesis___RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Hypothesis_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___or_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3_____RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q___or_____MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q___EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___CoherenceKeyword_4_0_ModelKeyword_4_1_LeftCurlyBracketKeyword_4_2_RightCurlyBracketKeyword_4_4___RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q___or_____MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___or_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3_____RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q________q.equals(syntax))
				emit_Hypothesis_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___or_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3_____RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q___or_____MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q___EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___CoherenceKeyword_4_0_ModelKeyword_4_1_LeftCurlyBracketKeyword_4_2_RightCurlyBracketKeyword_4_4___RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q___or_____MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___or_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3_____RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q________q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Query1_AddedKeyword_5_q.equals(syntax))
				emit_Query1_AddedKeyword_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Query1_RemovedKeyword_6_q.equals(syntax))
				emit_Query1_RemovedKeyword_6_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Query2_Query3___CompareKeyword_0_AndKeyword_4___or___IfKeyword_0___IsKeyword_1_2_AndKeyword_1_5_q__a_ThenKeyword_2_WhereKeyword_4__.equals(syntax))
				emit_Query2_Query3___CompareKeyword_0_AndKeyword_4___or___IfKeyword_0___IsKeyword_1_2_AndKeyword_1_5_q__a_ThenKeyword_2_WhereKeyword_4__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Query3_AndKeyword_1_5_q.equals(syntax))
				emit_Query3_AndKeyword_1_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Query3_AndKeyword_3_4_q.equals(syntax))
				emit_Query3_AndKeyword_3_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Query3___AndKeyword_1_5_q_IsKeyword_1_2__a.equals(syntax))
				emit_Query3___AndKeyword_1_5_q_IsKeyword_1_2__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Query3___AndKeyword_1_5_q_IsKeyword_1_2__p.equals(syntax))
				emit_Query3___AndKeyword_1_5_q_IsKeyword_1_2__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Query3___IsKeyword_1_2_AndKeyword_1_5_q__a.equals(syntax))
				emit_Query3___IsKeyword_1_2_AndKeyword_1_5_q__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Query3___IsKeyword_1_2_AndKeyword_1_5_q__p.equals(syntax))
				emit_Query3___IsKeyword_1_2_AndKeyword_1_5_q__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Reaction_SpacePlusSignSpaceKeyword_1_q.equals(syntax))
				emit_Reaction_SpacePlusSignSpaceKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_properties_CommaKeyword_3_q.equals(syntax))
				emit_properties_CommaKeyword_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ('properties' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     factorName=ID ' = ' 'with' (ambiguity) (rule end)
	 *     factorType1=ID 'with' (ambiguity) (rule end)
	 *     factorType=VariableType 'with' (ambiguity) (rule end)
	 *     factorValue=Values '}' (ambiguity) (rule end)
	 */
	protected void emit_Factor___PropertiesKeyword_7_0_LeftCurlyBracketKeyword_7_1_RightCurlyBracketKeyword_7_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('coherence' 'model' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'hypotheses' '{' ('mechanistic' 'hypotheses' '{' '}')? ('evidence' '{' '}')? (ambiguity) 'relational' 'hypotheses' '{' relHypothesis+=RelationalQuery
	 *     (rule start) 'hypotheses' '{' ('mechanistic' 'hypotheses' '{' '}')? ('evidence' '{' '}')? (ambiguity) ('relational' 'hypotheses' '{' '}')? '}' (rule start)
	 *     evidences+=Evidence '}' (ambiguity) 'relational' 'hypotheses' '{' relHypothesis+=RelationalQuery
	 *     evidences+=Evidence '}' (ambiguity) ('relational' 'hypotheses' '{' '}')? '}' (rule end)
	 *     mechHypothesis+=MechHypothesis '}' ('evidence' '{' '}')? (ambiguity) 'relational' 'hypotheses' '{' relHypothesis+=RelationalQuery
	 *     mechHypothesis+=MechHypothesis '}' ('evidence' '{' '}')? (ambiguity) ('relational' 'hypotheses' '{' '}')? '}' (rule end)
	 */
	protected void emit_Hypothesis___CoherenceKeyword_4_0_ModelKeyword_4_1_LeftCurlyBracketKeyword_4_2_RightCurlyBracketKeyword_4_4__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('evidence' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'hypotheses' '{' ('mechanistic' 'hypotheses' '{' '}')? (ambiguity) 'coherence' 'model' '{' coherenceLinks+=CoherenceLink
	 *     (rule start) 'hypotheses' '{' ('mechanistic' 'hypotheses' '{' '}')? (ambiguity) ('coherence' 'model' '{' '}')? 'relational' 'hypotheses' '{' relHypothesis+=RelationalQuery
	 *     (rule start) 'hypotheses' '{' ('mechanistic' 'hypotheses' '{' '}')? (ambiguity) ('coherence' 'model' '{' '}')? ('relational' 'hypotheses' '{' '}')? '}' (rule start)
	 *     mechHypothesis+=MechHypothesis '}' (ambiguity) 'coherence' 'model' '{' coherenceLinks+=CoherenceLink
	 *     mechHypothesis+=MechHypothesis '}' (ambiguity) ('coherence' 'model' '{' '}')? 'relational' 'hypotheses' '{' relHypothesis+=RelationalQuery
	 *     mechHypothesis+=MechHypothesis '}' (ambiguity) ('coherence' 'model' '{' '}')? ('relational' 'hypotheses' '{' '}')? '}' (rule end)
	 */
	protected void emit_Hypothesis___EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('mechanistic' 'hypotheses' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'hypotheses' '{' (ambiguity) 'evidence' '{' evidences+=Evidence
	 *     (rule start) 'hypotheses' '{' (ambiguity) ('evidence' '{' '}')? 'coherence' 'model' '{' coherenceLinks+=CoherenceLink
	 *     (rule start) 'hypotheses' '{' (ambiguity) ('evidence' '{' '}')? ('coherence' 'model' '{' '}')? 'relational' 'hypotheses' '{' relHypothesis+=RelationalQuery
	 *     (rule start) 'hypotheses' '{' (ambiguity) ('evidence' '{' '}')? ('coherence' 'model' '{' '}')? ('relational' 'hypotheses' '{' '}')? '}' (rule start)
	 */
	protected void emit_Hypothesis___MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('relational' 'hypotheses' '{' '}')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'hypotheses' '{' ('mechanistic' 'hypotheses' '{' '}')? ('evidence' '{' '}')? ('coherence' 'model' '{' '}')? (ambiguity) '}' (rule start)
	 *     coherenceLinks+=CoherenceLink '}' (ambiguity) '}' (rule end)
	 *     evidences+=Evidence '}' ('coherence' 'model' '{' '}')? (ambiguity) '}' (rule end)
	 *     mechHypothesis+=MechHypothesis '}' ('evidence' '{' '}')? ('coherence' 'model' '{' '}')? (ambiguity) '}' (rule end)
	 */
	protected void emit_Hypothesis___RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (('evidence' '{' '}') ('relational' 'hypotheses' '{' '}')?) | 
	  *         ('evidence' '{' '}') | 
	  *         (
	  *             ('mechanistic' 'hypotheses' '{' '}')? 
	  *             ('evidence' '{' '}') 
	  *             'coherence' 
	  *             'model' 
	  *             '{' 
	  *             '}' 
	  *             ('relational' 'hypotheses' '{' '}')?
	  *         ) | 
	  *         (('mechanistic' 'hypotheses' '{' '}')? ((('evidence' '{' '}') ('relational' 'hypotheses' '{' '}')?) | ('evidence' '{' '}')))
	  *     )?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'hypotheses' '{' (ambiguity) '}' (rule start)
	 */
	protected void emit_Hypothesis_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___or_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3_____RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q___or_____MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q___EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___CoherenceKeyword_4_0_ModelKeyword_4_1_LeftCurlyBracketKeyword_4_2_RightCurlyBracketKeyword_4_4___RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q___or_____MechanisticKeyword_2_0_HypothesesKeyword_2_1_LeftCurlyBracketKeyword_2_2_RightCurlyBracketKeyword_2_4__q_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3___or_____EvidenceKeyword_3_0_LeftCurlyBracketKeyword_3_1_RightCurlyBracketKeyword_3_3_____RelationalKeyword_5_0_HypothesesKeyword_5_1_LeftCurlyBracketKeyword_5_2_RightCurlyBracketKeyword_5_4__q________q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'added'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'if' 'is' (ambiguity) 'removed'? 'in the range' start1=rangeValue
	 *     (rule start) 'if' 'is' (ambiguity) 'removed'? 'then' response=ID
	 *     control=ID 'is' (ambiguity) 'removed'? 'in the range' start1=rangeValue
	 *     control=ID 'is' (ambiguity) 'removed'? 'then' response=ID
	 *     factor=ID 'is' (ambiguity) 'removed'? 'in the range' start1=rangeValue
	 *     factor=ID 'is' (ambiguity) 'removed'? 'then' response=ID
	 *     x=rangeValue (ambiguity) 'removed'? 'in the range' start1=rangeValue
	 *     x=rangeValue (ambiguity) 'removed'? 'then' response=ID
	 */
	protected void emit_Query1_AddedKeyword_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'removed'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'if' 'is' 'added'? (ambiguity) 'in the range' start1=rangeValue
	 *     (rule start) 'if' 'is' 'added'? (ambiguity) 'then' response=ID
	 *     control=ID 'is' 'added'? (ambiguity) 'in the range' start1=rangeValue
	 *     control=ID 'is' 'added'? (ambiguity) 'then' response=ID
	 *     factor=ID 'is' 'added'? (ambiguity) 'in the range' start1=rangeValue
	 *     factor=ID 'is' 'added'? (ambiguity) 'then' response=ID
	 *     x=rangeValue 'added'? (ambiguity) 'in the range' start1=rangeValue
	 *     x=rangeValue 'added'? (ambiguity) 'then' response=ID
	 */
	protected void emit_Query1_RemovedKeyword_6_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('compare' 'and') | ('if' ('is' 'and'?)* 'then' 'where')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Query2_Query3___CompareKeyword_0_AndKeyword_4___or___IfKeyword_0___IsKeyword_1_2_AndKeyword_1_5_q__a_ThenKeyword_2_WhereKeyword_4__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'and'?
	 *
	 * This ambiguous syntax occurs at:
	 *     Level2=Levels (ambiguity) ('is' (ambiguity))* 'then' 'where' (rule end)
	 *     Level2=Levels (ambiguity) ('is' (ambiguity))* 'then' 'where' level=Levels
	 *     Level2=Levels (ambiguity) ('is' (ambiguity))* 'then' response1=ID
	 *     Level2=Levels (ambiguity) ('is' (ambiguity))* control1=ID
	 *     Level2=Levels (ambiguity) ('is' (ambiguity))* factor1=ID
	 *     x2=rangeValue (ambiguity) ('is' (ambiguity))* 'then' 'where' (rule end)
	 *     x2=rangeValue (ambiguity) ('is' (ambiguity))* 'then' 'where' level=Levels
	 *     x2=rangeValue (ambiguity) ('is' (ambiguity))* 'then' response1=ID
	 *     x2=rangeValue (ambiguity) ('is' (ambiguity))* control1=ID
	 *     x2=rangeValue (ambiguity) ('is' (ambiguity))* factor1=ID
	 */
	protected void emit_Query3_AndKeyword_1_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'and'?
	 *
	 * This ambiguous syntax occurs at:
	 *     Level4=Levels (ambiguity) 'where' (rule end)
	 *     Level4=Levels (ambiguity) 'where' level=Levels
	 *     Level4=Levels (ambiguity) response1=ID
	 *     response1=ID 'is' (ambiguity) 'where' (rule end)
	 *     response1=ID 'is' (ambiguity) 'where' level=Levels
	 *     response1=ID 'is' (ambiguity) response1=ID
	 *     x4=rangeValue (ambiguity) 'where' (rule end)
	 *     x4=rangeValue (ambiguity) 'where' level=Levels
	 *     x4=rangeValue (ambiguity) response1=ID
	 */
	protected void emit_Query3_AndKeyword_3_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('and'? 'is')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'if' 'is' (ambiguity) 'at' 'level' Level2=Levels
	 *     (rule start) 'if' 'is' (ambiguity) x2=rangeValue
	 *     Level2=Levels (ambiguity) x2=rangeValue
	 *     control1=ID 'is' (ambiguity) 'at' 'level' Level2=Levels
	 *     control1=ID 'is' (ambiguity) x2=rangeValue
	 *     factor1=ID 'is' (ambiguity) 'at' 'level' Level2=Levels
	 *     factor1=ID 'is' (ambiguity) x2=rangeValue
	 */
	protected void emit_Query3___AndKeyword_1_5_q_IsKeyword_1_2__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('and'? 'is')+
	 *
	 * This ambiguous syntax occurs at:
	 *     Level2=Levels (ambiguity) 'at' 'level' Level2=Levels
	 *     x2=rangeValue (ambiguity) 'at' 'level' Level2=Levels
	 *     x2=rangeValue (ambiguity) x2=rangeValue
	 */
	protected void emit_Query3___AndKeyword_1_5_q_IsKeyword_1_2__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('is' 'and'?)*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'if' (ambiguity) 'then' 'where' (rule start)
	 *     (rule start) 'if' (ambiguity) 'then' 'where' level=Levels
	 *     (rule start) 'if' (ambiguity) 'then' response1=ID
	 *     (rule start) 'if' (ambiguity) control1=ID
	 *     (rule start) 'if' (ambiguity) factor1=ID
	 *     Level2=Levels 'and'? (ambiguity) 'then' 'where' (rule end)
	 *     Level2=Levels 'and'? (ambiguity) 'then' 'where' level=Levels
	 *     Level2=Levels 'and'? (ambiguity) 'then' response1=ID
	 *     Level2=Levels 'and'? (ambiguity) control1=ID
	 *     Level2=Levels 'and'? (ambiguity) factor1=ID
	 *     factor1=ID (ambiguity) control1=ID
	 *     x2=rangeValue 'and'? (ambiguity) 'then' 'where' (rule end)
	 *     x2=rangeValue 'and'? (ambiguity) 'then' 'where' level=Levels
	 *     x2=rangeValue 'and'? (ambiguity) 'then' response1=ID
	 *     x2=rangeValue 'and'? (ambiguity) control1=ID
	 *     x2=rangeValue 'and'? (ambiguity) factor1=ID
	 */
	protected void emit_Query3___IsKeyword_1_2_AndKeyword_1_5_q__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('is' 'and'?)+
	 *
	 * This ambiguous syntax occurs at:
	 *     control1=ID (ambiguity) 'then' 'where' (rule end)
	 *     control1=ID (ambiguity) 'then' 'where' level=Levels
	 *     control1=ID (ambiguity) 'then' response1=ID
	 *     control1=ID (ambiguity) control1=ID
	 *     control1=ID (ambiguity) factor1=ID
	 *     factor1=ID (ambiguity) 'then' 'where' (rule end)
	 *     factor1=ID (ambiguity) 'then' 'where' level=Levels
	 *     factor1=ID (ambiguity) 'then' response1=ID
	 *     factor1=ID (ambiguity) factor1=ID
	 */
	protected void emit_Query3___IsKeyword_1_2_AndKeyword_1_5_q__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ' + '?
	 *
	 * This ambiguous syntax occurs at:
	 *     agent1=ID (ambiguity) (rule end)
	 *     agent1=ID (ambiguity) agent=ID
	 */
	protected void emit_Reaction_SpacePlusSignSpaceKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     pVal=Values (ambiguity) (rule end)
	 */
	protected void emit_properties_CommaKeyword_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
